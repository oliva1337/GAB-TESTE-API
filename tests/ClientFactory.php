<?php

declare(strict_types=1);

/*
 * AgNciaVirtualV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace AgNciaVirtualV2Lib\Tests;

class ClientFactory
{
    public static function create(HttpCallBackCatcher $httpCallback): \AgNciaVirtualV2Lib\AgNciaVirtualV2Client
    {
        return (new \AgNciaVirtualV2Lib\AgNciaVirtualV2Client(static::getConfigurationFromEnvironment()))
            ->withConfiguration(static::getTestConfiguration($httpCallback));
    }

    public static function getTestConfiguration(HttpCallBackCatcher $httpCallback): array
    {
        return ['httpCallback' => $httpCallback];
    }

    public static function getConfigurationFromEnvironment(): array
    {
        $config = [];
        $timeout = getenv('AG_NCIA_VIRTUAL_V_2_LIB_TIMEOUT');
        $environment = getenv('AG_NCIA_VIRTUAL_V_2_LIB_ENVIRONMENT');
        $basicAuthUserName = getenv('AG_NCIA_VIRTUAL_V_2_LIB_BASIC_AUTH_USER_NAME');
        $basicAuthPassword = getenv('AG_NCIA_VIRTUAL_V_2_LIB_BASIC_AUTH_PASSWORD');

        if ($timeout !== false && \is_numeric($timeout)) {
            $config['timeout'] = intval($timeout);
        }

        if ($environment !== false) {
            $config['environment'] = $environment;
        }

        if ($basicAuthUserName !== false) {
            $config['basicAuthUserName'] = $basicAuthUserName;
        }

        if ($basicAuthPassword !== false) {
            $config['basicAuthPassword'] = $basicAuthPassword;
        }

        return $config;
    }
}
