<?php
/*
 * AgNciaVirtualV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace AgNciaVirtualV2Lib\Tests;

use AgNciaVirtualV2Lib\Exceptions\ApiException;
use AgNciaVirtualV2Lib\Exceptions;
use AgNciaVirtualV2Lib\ApiHelper;
use AgNciaVirtualV2Lib\Models;
use PHPUnit\Framework\TestCase;

class HOMOLOGAOControllerTest extends TestCase
{
    /**
     * @var \AgNciaVirtualV2Lib\Controllers\HOMOLOGAOController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getHOMOLOGAOController();
    }


    /**
     * Todo Add description for test testHMLObterToken
     */
    public function testHMLObterToken()
    {
        // Parameters for the API call
        $usuarioId = 9996;
        $rotinaId = 9999999997;
        $codigoEmpresa = 'CAN';
        $body = TestHelper::getJsonMapper()->mapClass(json_decode(
            '{
  "grant_type": "client_credentials"
}'),
            'AgNciaVirtualV2Lib\Models\\HMLObterTokenRequest'
        );

        // Set callback and perform API call
        try {
            self::$controller->hMLObterToken($usuarioId, $rotinaId, $codigoEmpresa, $body);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testHMLAutenticarCliente
     */
    public function testHMLAutenticarCliente()
    {
        // Parameters for the API call
        $body = TestHelper::getJsonMapper()->mapClass(json_decode(
            '{
  "matricula": "1100043548",
  "documento": "04397820740"
}'),
            'AgNciaVirtualV2Lib\Models\\HMLAutenticarClienteRequest'
        );

        // Set callback and perform API call
        try {
            self::$controller->hMLAutenticarCliente($body);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testHMLBuscarSegundaVia
     */
    public function testHMLBuscarSegundaVia()
    {
        // Parameters for the API call
        $clientId = 'a7d65a76-f1fe-33f3-ae6d-c2964184e849';
        $accessToken = '19f08bef-0bcd-30ab-8d83-c5eb21e43f63';
        $protocolo = 202111022297840;

        // Set callback and perform API call
        try {
            self::$controller->hMLBuscarSegundaVia($clientId, $accessToken, $protocolo);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testHMLEnviarEMailSegundaVia
     */
    public function testHMLEnviarEMailSegundaVia()
    {
        // Parameters for the API call
        $clientId = 'a7d65a76-f1fe-33f3-ae6d-c2964184e849';
        $accessToken = 'fff4222a-74c8-389a-90e2-1d05ef9ea707';
        $protocolo = 202111022297816;
        $seqOriginal = 22356553;
        $email = 'vinicius.lobo@grupoaguasdobrasil.com.br';

        // Set callback and perform API call
        try {
            self::$controller->hMLEnviarEMailSegundaVia($clientId, $accessToken, $protocolo, $seqOriginal, $email);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testHMLGerarCDigoDeBarrasSegundaVia
     */
    public function testHMLGerarCDigoDeBarrasSegundaVia()
    {
        // Parameters for the API call
        $clientId = 'a7d65a76-f1fe-33f3-ae6d-c2964184e849';
        $accessToken = '212ec62c-4a84-3dd3-bb3b-b5590a5cf1ca';
        $protocolo = 202111022297816;
        $seqOriginal = 22356553;

        // Set callback and perform API call
        try {
            self::$controller->hMLGerarCDigoDeBarrasSegundaVia($clientId, $accessToken, $protocolo, $seqOriginal);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Todo Add description for test testHMLGerarSegundaVia
     */
    public function testHMLGerarSegundaVia()
    {
        // Parameters for the API call
        $clientId = 'a7d65a76-f1fe-33f3-ae6d-c2964184e849';
        $accessToken = '9c5a1e9a-d8c9-3d04-bb66-d05e5c3ac345';
        $protocolo = 202111022297816;
        $seqOriginal = 22356553;

        // Set callback and perform API call
        try {
            self::$controller->hMLGerarSegundaVia($clientId, $accessToken, $protocolo, $seqOriginal);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
